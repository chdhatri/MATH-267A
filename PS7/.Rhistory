epanechnikov  <- function(a,x=0,h=1) {
#validation code
if (!is.numeric(x)) {
stop("x must be numeric.")
}
if (!is.numeric(a)) {
stop("a must be numeric.")
}
if (h <= 0) {
stop("Bandwith (h) must be greater than 0.")
}
# calculate u
u <- abs((x - a)/h)
#calculate kernal estimator
k <- 3/4 *(1-u^2)
#Indicator function
I <- ifelse(u < 1 , 1 ,0)
# Epanechnikov kernel
1/h * k * I
}
curve(epanechnikov(a, x = 0, h = 1), from = -3, to = 3,
xname = "a", xlim = c(-3,3), ylim = c(0,2), axes = FALSE, ann = FALSE, col = "violetred")
curve(epanechnikov(a, x = 0, h = 0.5), from = -3, to = 3, xname = "a", add = TRUE, col = "slateblue2")
curve(epanechnikov(a, x = 0, h = 2), from = -3, to = 3, xname = "a", add = TRUE, col = "gold")
curve(epanechnikov(a, x = 1, h = 0.75), from = -3, to = 3, xname = "a", add = TRUE, col = "springgreen")
axis(1, at = seq.int(-3, 3), labels = seq.int(-3, 3))
axis(2, at = seq.int(0, 2, by = 0.5), seq.int(0, 2, by = 0.5))
expr1 <- expression(K[1](a))
expr2 <- expression(K[0.5](a))
expr3 <- expression(K[2](a))
expr4 <- expression(K[0.75](a - 1))
legend(1, 2, legend = c(expr1, expr2, expr3, expr4),
bty = "n", lty = 1, col = c("violetred", "slateblue2", "gold", "springgreen"))
title(xlab = "a", ylab = "Density")
epanechnikov(a, x = 0, h = 1)
epanechnikov(-3, x = 0, h = 1)
epanechnikov(-2, x = 0, h = 1)
epanechnikov(-1, x = 0, h = 1)
epanechnikov(0, x = 0, h = 1)
epanechnikov(1, x = 0, h = 1)
epanechnikov(-3, x = 1, h = 0.75)
epanechnikov(-2, x = 1, h = 0.75)
epanechnikov(-3, x = 1, h = 0.75)
epanechnikov(0, x = 1, h = 0.75)
epanechnikov(1, x = 1, h = 0.75)
x = c(1,1.2,1.5,2.8,3)
h=0.75
aj = seq.int(0,4,length.out = 500)
n=length(x)
laj <- as.list(aj)
plot(density(Cars93$Price, kernel = "gaussian"))
library(MASS)
data(Cars93, package = "MASS")
plot(density(Cars93$Price, kernel = "gaussian"))
plot(density(Cars93$Price, kernel = "gaussian", bw=2))
plot(density(Cars93$Price, kernel = "gaussian"))
plot(density(Cars93$Price, kernel = "biweight"))
par(mfrow=c(2,2))
plot(density(Cars93$Price, kernel = "biweight",bw=2),col="blue",main="BiWeight")
plot(density(Cars93$Price, kernel = "cosine",bw=2),col="red",main="cosine")
plot(density(Cars93$Price, kernel = "biweight",bw=3),col="blue",main="BiWeight")
plot(density(Cars93$Price, kernel = "epanechnikov",bw=2),col="pink",main="epanichnikov")
plot(density(Cars93$Price, kernel = "rectangular",bw=2),col="green",main="rectangular")
plot(density(Cars93$Price, kernel = "rectangular",bw=3),col="green",main="rectangular")
plot(density(Cars93$Price, kernel = "rectangular",bw=4),col="green",main="rectangular")
plot(density(Cars93$Price, kernel = "triangular",bw=2), col="orange",main="traingular")
plot(density(Cars93$Price, kernel = "triangular",bw=3), col="orange",main="traingular")
x <- c(3,-1,4,NA,1,-1,5,1,9, NA)
x.asc <- sort(x) #by defaul its ascending order
x.asc
x.desc <- sort(x, decreasing = TRUE)
x.asc1 <- sort(x, decreasing = FALSE)
x.na <- sort(x, na.last = TRUE)
x.na
x.na1 <- sort(x, na.last = FALSE)
x.na1
ch <- c(NA,"bat","boy","cat",NA,"dog","day")
sort(ch)
sort(ch, na.last = TRUE, decreasing = TRUE)
(sort.index <- order(x)) # without na.last and asc order
(sort.index.dec <- order(x, decreasing = TRUE))
x[sort.index] # but order gives na.last=TRUE by default
x[sort.index.dec]
(sort.index.na2 <- order(x,na.last = FALSE, decreasing = TRUE))
x[sort.index.na2]
x[sort.index.dec]
(sort.index.na <- order(x,na.last = TRUE))
x[sort.index.na]
m1 <- matrix(c(2,4,6,2,5,4), nrow=2, ncol = 3)
m1
sort(m1)
m1 <- matrix(c(2,4,6,2,5,4, NA,1,3,NA,2,NA), nrow=4, ncol = 3)
m1
sort(m1) # sort by vector
sort(m1,na.last = TRUE)
morder <- order(m1[,1], m1[,3])
morder
m1[morder,]
sort(stacked.caffeine.x)
lapply(stacked.caffeine.x, sort)
caffeine <- read.table("caffeine.txt", header=TRUE)
stacked.caffeine <-stack(caffeine)
(caffeine.x <- cbind(caffeine, sex=c("female","male")))
stacked.caffeine.x <-  stack(caffeine.x, select=1:3)
stacked.caffeine.x <-  cbind(stacked.caffeine.x, sex=caffeine.x$sex)
caffeine <- read.table("caffeine.txt", header=TRUE)
caffeine <- read.table("caffeine.txt", header=TRUE)
caffeine <- read.table("\Users\ssarma\caffeine.txt", header=TRUE)
caffeine <- read.table("\users\ssarma\caffeine.txt", header=TRUE)
caffeine <- read.table("caffeine.txt", header=TRUE)
caffeine <- read.table("caffeine.txt", header=TRUE)
caffeine <- read.csv("~/caffeine.txt", sep="")
View(caffeine)
stacked.caffeine <-stack(caffeine)
(caffeine.x <- cbind(caffeine, sex=c("female","male")))
stacked.caffeine.x <-  stack(caffeine.x, select=1:3)
stacked.caffeine.x <-  cbind(stacked.caffeine.x, sex=caffeine.x$sex)
caffeine1 <- unstack(stacked.caffeine.x, values ~ sex)
lapply(stacked.caffeine.x, sort)
stacked.caffeine.x
stacked.caffeine.x[order(stacked.caffeine.x),]
index1 <- order(stacked.caffeine.x[,1])
stacked.caffeine.x[index1,]
index2 <- order(stacked.caffeine.x[,1], stacked.caffeine.x[,2])
stacked.caffeine.x[index2,]
index3 <- order(stacked.caffeine.x[,1], stacked.caffeine.x[,3])
stacked.caffeine.x[index3,]
?order
(sort.index <- order(x)) # without na.last and asc order
x[sort.index] # but order gives na.last=TRUE by default
(sort.index.na3 <- order(x, na.last = NA))
x[sort.index.na3]
lapply(stacked.caffeine.x, sort)
lapply(stacked.caffeine.x, 1,sort)
data()
library()
help(package="datasets")
c <- function(x) x+1
c(3)
c(2,3,1,5)
rm(c)
c(2,3)
library(MASS)
search()
?detach
detach(package:MASS, unload=TRUE)
library(MASS)
search()
detach(package:MASS, unload=FALSE)
search()
install.packages("MASS")
install.packages("MASS")
.Library
install.packages("MASS")
remove.packages("MASS")
library(MASS)
install.packages("MASS")
remove.packages("MASS",.Library)
